using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.XR.ARFoundation;

public class SpawnableManager : MonoBehaviour
{
    [SerializeField]
    ARRaycastManager m_RaycastManager;
    List<ARRaycastHit> m_Hits = new List<ARRaycastHit>();
    [SerializeField]
    GameObject spawnablePrefab;

    Camera arCam;
    GameObject spawnedObject;
    bool objectIsSpawned = false;
    // Start is called before the first frame update
    void Start()
    {
        // Set spawnedObject to null and find the AR Camera
        spawnedObject = null;
        arCam = GameObject.Find("AR Camera").GetComponent<Camera>();
    }

    // Update is called once per frame
    void Update()
    {
        // Check if a ray has hit a plane
        if (Input.touchCount == 0)
            return;

        // Create raycast hit and ray objects
        RaycastHit hit;
        Ray ray = arCam.ScreenPointToRay(Input.GetTouch(0).position);

        if (m_RaycastManager.Raycast(Input.GetTouch(0).position, m_Hits))
        {
            // Check what phase the touch event is
            // If it is set to begin, continue
            if (Input.GetTouch(0).phase == TouchPhase.Began && spawnedObject == null)
            {
                // Initiate when touch
                if (Physics.Raycast(ray, out hit))
                {
                    // Check if touching the previously spawned object
                    if (hit.collider.gameObject.tag == "Spawnable")
                    {
                        // If so, assign object interacting with the hit collider to spawnedObject variable
                        spawnedObject = hit.collider.gameObject;
                    }
                    else
                    {
                        // If is it not a previously spawned object, create instance of prefab
                        if (!objectIsSpawned)
                        {
                            SpawnPrefab(m_Hits[0].pose.position);
                            objectIsSpawned = true;
                        }
                    }
                }
            }
            // If phase is set to MOVED and spawnedObject variable has something in it
            else if (Input.GetTouch(0).phase == TouchPhase.Moved && spawnedObject != null)
            {
                // Move spawned object to the touch location
                spawnedObject.transform.position = m_Hits[0].pose.position;
            }

            // Check if phase ENDED
            if (Input.GetTouch(0).phase == TouchPhase.Ended)
            {
                spawnedObject = null;
            }
        }
    }

    // Method that takes in a location and creates an instance of the prefab at the location
    void SpawnPrefab(Vector3 spawnPosition)
    {
        spawnedObject = Instantiate(spawnablePrefab, spawnPosition, Quaternion.identity);
    }
}
